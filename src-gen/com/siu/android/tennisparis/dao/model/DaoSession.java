package com.siu.android.tennisparis.dao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.DaoConfig;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.IdentityScopeType;

import com.siu.android.tennisparis.dao.model.Availability;
import com.siu.android.tennisparis.dao.model.Tennis;

import com.siu.android.tennisparis.dao.model.AvailabilityDao;
import com.siu.android.tennisparis.dao.model.TennisDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig availabilityDaoConfig;
    private final DaoConfig tennisDaoConfig;

    private final AvailabilityDao availabilityDao;
    private final TennisDao tennisDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        availabilityDaoConfig = daoConfigMap.get(AvailabilityDao.class).clone();
        availabilityDaoConfig.initIdentityScope(type);

        tennisDaoConfig = daoConfigMap.get(TennisDao.class).clone();
        tennisDaoConfig.initIdentityScope(type);

        availabilityDao = new AvailabilityDao(availabilityDaoConfig, this);
        tennisDao = new TennisDao(tennisDaoConfig, this);

        registerDao(Availability.class, availabilityDao);
        registerDao(Tennis.class, tennisDao);
    }
    
    public void clear() {
        availabilityDaoConfig.getIdentityScope().clear();
        tennisDaoConfig.getIdentityScope().clear();
    }

    public AvailabilityDao getAvailabilityDao() {
        return availabilityDao;
    }

    public TennisDao getTennisDao() {
        return tennisDao;
    }

}
